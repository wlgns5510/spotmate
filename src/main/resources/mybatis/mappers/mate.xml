<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mate">

	<!-- mateList 가져오기 -->	
	<select id="selectMateList" resultType="MateVo" parameterType="mateVo">
		<![CDATA[
				 select   ort.rn,
				 	      ort.id,
				          ort.name,
				          ort.carName,
				          ort.carPicture,
				          ort.carNo,
				          ort.introduce,
				          ort.mateNo,
				          ort.startDate,
				          ort.endDate,
				          ort.sDate,
				          ort.eDate,
				          ort.people,
				          ort.type,
				          ort.point,
				          ort.duration,
				          ort.distance,
				          ort.comments,
				          ort.sPlace,
				          ort.ePlace,
				          ort.opts
				from  (select    rownum rn,
								 ot.id,
				                 ot.name,
				                 ot.carName,
				                 ot.carPicture,
				                 ot.carNo,
				                 ot.introduce,
				                 ot.mateNo,
				                 ot.startDate,
				                 ot.endDate,
				                 ot.sDate,
				                 ot.eDate,
				                 ot.people,
				                 ot.type,
				                 ot.point,
				                 ot.duration,
				                 ot.distance,
				                 ot.comments,
				                 ot.sPlace,
				                 ot.ePlace,
				                 ot.opts
				        from   (select   u.id,
				        				 u.name,
				                         c.carName,
				                         c.carPicture,
				                         c.carNo,
				                         c.introduce,
				                         s.no mateNo,
				                         to_char(s.startDate,'mm.dd') startDate,
				                         to_char(s.endDate, 'mm.dd') endDate,
				                         to_char(s.startDate, 'yyyy-mm-dd') sDate,
				                         to_char(s.endDate, 'yyyy-mm-dd') eDate,
				                         s.people,
				                         s.type,
				                         s.point,
				                         s.duration,
				                         s.distance,
				                         s.comments,
				                         p.sPlace,
				                         p.ePlace,
				                         pt.opts
				                from  users u,
				                      car c,
				                      spotmate s,
				                      (select substr(s.Place, 1, 6) sPlace,
				                                       substr(e.place, 1, 6) ePlace,
				                                       s.mateNo
				                       from place s, (select Place,
				                                             mateNo
				                                      from place
				                                      where wayNo = 0
				                                      and day = 1) e
				                       where s.wayNo = -1
				                       and s.day = 1
				                       and s.mateNo = e.mateNo) p,  (select mateNo,
				                              							    LISTAGG(detailNo, ',') within group (order by detailNo asc) opts
											                         from spotDetail
											                         group by mateNo) pt 
				               where u.no = c.userNo
				               and   c.no = s.carNo
				               and p.mateNo = s.no
				               and p.mateNo = pt.mateNo
			 	 
		]]>
							  <if test="ePlace != ''  and  ePlace != null ">
							    	and p.ePlace like '%'||#{ePlace}||'%'
							  </if>
							
							  <if test="sDate != ''  and  sDate != null ">
									and  to_char(s.startDate, 'yyyy-mm-dd') = #{sDate}
							  </if>
							
							  <if test="eDate != ''  and  eDate != null ">
									and to_char(s.endDate, 'yyyy-mm-dd') = #{eDate}
							  </if>
							
							  <if test="smPeople != ''  and  smPeople != null ">
									and s.people = #{smPeople}
							  </if>
							  
							  <if test="mateContactList != ''  and  mateContactList != null ">
							      <foreach item="item" collection="mateContactList">
							          and pt.opts like '%'||#{item}||'%'
							      </foreach>
							  </if>	
					
		<![CDATA[	 
				               order by startDate asc) ot
				        ) ort
				where rn>=#{startRnum}
				and rn<=#{endRnum}
		]]>
		
		
	</select>
	

	
	<!-- 해당 메이트에 관한 정보 -->
	<select id="deepMateRead" resultType="MateVo" parameterType="int">
		<![CDATA[
				select no mateNo,
				       carNo,
				       to_char(startDate, 'yyyy.mm.dd day') startDate,
				       people,
				       to_char(endDate, 'yyyy.mm.dd day') endDate,
				       ceil(endDate - startDate) allDay,
				       point,
				       comments
				from spotmate
				where no = #{no}
		]]>
	</select>
	
	<!-- 해당 메이트의 운전자,차량정보 -->
	<select id="deepMateDriverRead" resultType="MateVo" parameterType="int">
		<![CDATA[
				select  u.id,
						u.name,
				        c.carName,
				        c.carPicture,
				        c.carName,
				        c.carNo,
				        c.introduce,
				        s.comments
				from users u,
				     car c,
				     spotmate s
				where u.no = c.userNo
				and   c.no = s.carNo
				and s.type = 'mate'
				and s.no = #{no}
		]]>
	</select>
	
	<!-- 해당 메이트의 출발지, 경유지, 도착지정보 -->
	<select id="deepPlaceRead" resultType="MateVo" parameterType="int">
		<![CDATA[
				select p.mateNo,
				       p.day,
				       p.wayNo,
				       p.sepplace,
				       p.time,
				       p.place,
				       p.lat,
				       p.lng,
				       to_char(s.startDate, 'yyyy.mm.dd day') startDate,
				       to_char(s.endDate, 'yyyy.mm.dd day') endDate
				from place p, spotmate s
				where s.no = p.mateNo
				and p.mateNo = #{no}
		]]>
	</select>
	
	
	<!-- 조건 모두 가져오기 -->
	<select id="getOptList"  resultType="DetailOptVo">
		<![CDATA[
				select no detailOptNo,
       				   name
				from detailOpt
		]]>
	</select>
	
	<!-- 해당메이트가 선택한 조건 -->
	<select id="deepDetailRead" resultType="MateVo" parameterType="int">
		<![CDATA[
				select d.no mateOptionNo,
       				   d.name optionName
				from spotDetail s, detailOpt d
				where s.detailNo = d.no
				and s.mateNo = #{no}
		]]>
	</select>
	
	<!-- 해당 메이트의 운전자의 별점리스트 -->
	<select id="deepReviewList" resultType="CarpoolVo" parameterType="int">
		<![CDATA[
				select r.id,
			       star,
			       content
				   from (select mateNo,
						        driverNo,
						        no
						        from reservation) d, ( select driverNo
			                           from reservation
			                           where mateNo = #{no}
			                           group by driverNo) i, (select star,
			                                        content,
			                                        resvno
			                                 from userReview ) s, (select id,
			                                                              r.no,
			                                                              r.mateNo
			                                                        from users u, reservation r
			                                                        where u.no = r.userNo) r
				where d.driverNo = i.driverNo
				and d.no = s.resvno
				and r.no = s.resvno
		]]>
	</select>
	
	<!-- 해당 메이트 운전자의 별점 평균 -->
	<select id="deepReviewAvg" resultType="CarpoolVo" parameterType="int">
		<![CDATA[
				select round(avg(star),1) avgStar 
		         from users u, car c, reservation r, userReview w, spotmate sm
		         where u.no = c.userNo
		         and c.no = sm.carNo
		         and sm.no = r.mateNo
		         and u.no = r.driverNo
		         and r.no = w.resvNo
		         and u.no = (select ca.userNo
		                     from spotMate sm, car ca
		                     where sm.carNo = ca.no
		                     and sm.no = #{mateNo})
		]]>
	</select>
	
	<!-- user예약내역 DB저장 -->	
	<insert id="insertUserMateInfo" parameterType="mateVo">
		<selectKey keyProperty="driverNo" resultType="int" order="BEFORE">
	            select driverNo
	            from reservation
	            where mateNo = #{spotMateNo}
	            group by driverNo
	    </selectKey>
	      
	    <![CDATA[
 				insert into reservation 
 				values (seq_reservation_no.nextval, #{spotMateNo}, #{userNo}, #{driverNo}, sysdate, -#{point}, 'open', #{people}, '', '')
 	     ]]>
	</insert>
	
	<!-- 인원체크하기(차량 탑승가능인원) -->
	<select id="chkpeople" parameterType="int" resultType="int">
		<![CDATA[
		      	select people
		      	from spotmate
		      	where no = #{mateNo}
        ]]>
   </select>
   
   <!-- 인원체크하기(탑승할 인원), 차량 탑승가능인원에서 탑승할 인원을 빼준다. -->
   <insert id="updatereservpeople" parameterType="map">
   		<![CDATA[
   				update spotmate
      			set people = people - #{people}
     		    where no = #{mateNo} 
   		]]>
   </insert>
   
   <!-- user 예약시 포인트 DB저장 -->
   <insert id="insertUserMatePoint" parameterType="MateVo">
   		<selectKey keyProperty="resvNo" resultType="int" order="BEFORE">
   			 select no
	         from reservation
	         where mateNo = #{spotMateNo}
	         and userNo = #{userNo}
   		</selectKey>
   		<![CDATA[
 				insert into pointusage 
 				values (seq_pointusage_no.nextval, #{userNo}, '완료', sysdate, '', -#{point}, #{resvNo})
 		]]>
   		
   </insert>
	
</mapper>


