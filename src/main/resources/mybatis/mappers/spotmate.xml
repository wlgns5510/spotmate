<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="spotmate">

	<select id="getmateno" parameterType="int" resultType="int">
		select s.no
		from spotmate s, car c
		where s.carNo = c.no
		and type='hitchhike'
		and c.userNo = #{userNo}
		and status = 'open'
	</select>
	
	<select id="searchlist" parameterType="hsVo" resultType="hsrVo">
		select  splace.mateNo,
		    eplace.place eplace1,
		    splace.people,
		    splace.point,
            listagg(name, ',') within group(order by dopt.no asc) name
		from (select 
		    s.no mateNo, 
		    s.people,
		    s.point
		from spotmate s, place p
		where p.mateNo = s.no
		and wayno = -1
        and place like '%'||#{splace}||'%'
		and people >= #{people}  
        and type='hitchhike'
		group by s.no, s.people, s.point
		order by s.no desc) splace, (select place,  
		                                    mateNo
		                                from spotmate s, place p
		                                where p.mateNo = s.no
                                        and type='hitchhike'
                                        and place like '%'||#{eplace}||'%'
                                        and people >= #{people}
		                                and wayno = 0
		                                order by s.no desc) eplace, (select do.no,
                                                                            name,
                                                                            mateNo
                                                                       from spotDetail sd, detailopt do
                                                                       where sd.detailno = do.no
                                                                       <if test="detailOpt != '' and detailOpt != null">
                                                                       and (
                                                                       name like ''
                                                                       <if test="nosmoke != '' and nosmoke != null">
                                                                       or name like '%'||'비흡연자'||'%'
                                                                       </if>
                                                                       <if test="femaleDriver != '' and femaleDriver != null">
                                                                       or name like '%'||'여성'||'%'
                                                                       </if>
                                                                       <if test="pet != '' and pet != null">
                                                                       or name like '%'||'반려동물'||'%'
                                                                       </if>
                                                                       <if test="phoneCharge != '' and phoneCharge != null">
                                                                       or name like '%'||'충전기'||'%'
                                                                       </if>
                                                                       <if test="trunk != '' and trunk != null">
                                                                       or name like '%'||'트렁크'||'%'
                                                                       </if>
                                                                       )
                                                                       </if>
                                                                       )dopt
		where splace.mateNo = eplace.mateNo
        and splace.mateNo = dopt.mateNo
        group by splace.mateNo, eplace.place, splace.people, splace.point
		order by splace.mateNo desc
	</select>
	
	<select id="getLatlng" parameterType="hsrVo" resultType="String">
		select latlng
		from spotmate s, place p
		where mateNo = #{mateNo}
		and s.no = mateNo
		and wayno = 0
		and type = 'hitchhike'
	</select>
	
	<select id="chkanothercarpool" parameterType="int" resultType="com.spotmate.vo.StartEndTimeVo">
		select to_char(startdate,  'yyyy-mm-dd hh24:mi') "start",
    		to_char(enddate,  'yyyy-mm-dd hh24:mi') "end"
		from spotmate
		where carNo = #{userNo}
		and type = 'carpool'
		and status = 'open'
	</select>
	
	<select id="chkanotherhitchhike" parameterType="int" resultType="String">
		select comments 
		from spotmate
		where carNo = #{userNo}
		and type = 'hitchhike'
		and status = 'open'
	</select>

 
	<select id="getDriverIntroduce" parameterType="int" resultType="String">
		select introduce
		from car
		where no = #{carNo}
	</select>
	
	<select id="getDriverDetailOpt" parameterType="int" resultType="String">
		select listagg(name, ',') within group(order by detailNo) as name
		from car c, carDetail cd, detailOpt do
		where c.no = #{carNo}
		and c.no = cd.carNo
		and cd.detailNo = do.no
	</select>

	<select id="nowaddr" parameterType="int" resultType="String">
		select latlng
		from place
		where mateNo = #{mateNo}
		and wayno = 0
	</select>


<!-- 	hitchDeep 상세정보 review 있을 때-->
	<select id="selecthitchdriverinfo" parameterType="int" resultType="hVo">
		select LISTAGG(place, ',') within group (order by wayno asc) as fullPlace,
			r.point point,
			comments,
			round(star, 1) star,
			name,
			detailOpt
		from spotmate s, place p, reservation r,
		(select dn.driverno,
			avg(star) star
		from reservation r, (select resvno,
								avg(star) star
							from userreview
							group by resvno
							order by resvno asc) re, ( select driverNo
													from reservation
													where mateNo = #{mateNo} ) dn
		where r.no = re.resvno
		and dn.driverno = r.driverno
		group by r.driverno, dn.driverno) dn, ( select LISTAGG(name, ',') within group (order by name asc) as detailopt
												from spotdetail sd, detailopt d
												where mateNo = #{mateNo}
												and sd.detailno = d.no ) , ( select name
																			from users u, reservation r
																			where u.no = r.driverNo
																			and r.mateNo = #{mateNo} )
		where s.no = #{mateNo}
		and s.no = p.mateNo
		and
		r.mateNo = s.no
		group by r.point, comments, detailopt, dn.driverNo, star, name
	</select>
<!-- 	hitchDeep 상세정보 review 있을 때-->

<!-- 	hitchDeep 상세정보 review 없을 때-->
	<select id="selecthitchdriverinfonoreview" parameterType="int" resultType="hVo">
		select LISTAGG(place, ',') within group (order by wayno asc) as fullPlace,
		r.point point,
		comments,
		name,
		detailOpt
		from spotmate s, place p, reservation r,
		(select dn.driverno
		from reservation r, ( select driverNo
							from reservation
							where mateNo = #{mateNo} ) dn
		where dn.driverno = r.driverno
		group by r.driverno, dn.driverno) dn, ( select LISTAGG(name, ',') within group (order by name asc) as detailopt
												from spotdetail sd, detailopt d
												where mateNo = #{mateNo} 
												and sd.detailno = d.no ) , ( select name
																			from users u, reservation r
																			where u.no = r.driverNo
																			and r.mateNo = #{mateNo} )
		where s.no = #{mateNo}
		and s.no = p.mateNo
		and r.mateNo = s.no
		group by r.point, comments, detailopt, dn.driverNo,	name
	</select>
<!-- 	hitchDeep 상세정보 review 없을 때-->

	<select id="selectsummarydriverinfo" parameterType="map" resultType="hVo">
		select place eplace1,
			name,
			s.people people
		from spotmate s, place p, reservation r, ( select name
													from users u, reservation r
													where u.no = r.driverNo
													and r.mateNo = #{mateNo} )
		where s.no = #{mateNo}
		and s.carNo != #{userNo}
		and s.no = p.mateNo
		and r.mateNo = s.no
		and wayno = 0
		and s.people > 0
		group by driverNo, place, name, s.people
	</select>


	<select id="selecthitchdriverinfonowpos" parameterType="int" resultType="String">
		select latlng
		from place
		where mateNo = #{mateNo}
	</select>

	<select id="gethdriverpage" parameterType="int" resultType="hVo">
		select s.no mateNo,
			p.latlng,
			r.lat lat,
			r.lng lng
		from reservation r, users u, spotmate s, place p
		where r.driverNo = u.no
		and p.mateNo = s.no
		and s.no = r.mateNo
		and type = 'hitchhike'
		and wayno = -1
		and s.status='open'
		and u.no = #{no}
	</select>

	<select id="selectDriverPos" parameterType="mVo" resultType="mVo">
		select latlng addr,
			mateNo
		from place
		where mateNo = #{mateNo}
		and wayno = 0
	</select>
	
	<select id="selectnear" parameterType="int" resultType="hVo">
		select p.latlng,
			s.no mateNo,
			s.people
		from place p, spotmate s
		where wayno = 0
		and s.no = p.mateno
		and s.status = 'open'
		and type = 'hitchhike'
		and s.carNo != #{userNo}
		and s.people > 0
		order by s.no desc
	</select>

	<select id="nearHitchListLogin" parameterType="int" resultType="hVo">
		select s.no mateNo,
		place eplace1,
		slatlng.lat,
		slatlng.lng,
		s.people people,
		s.point point,
        latlng
		from spotmate s, place p, (select lat,
                                          lng,
                                          s.no no
                                   from spotmate s, place p
                                   where s.no = p.mateNo
                                   and wayno = -1) slatlng
		where p.mateNo = s.no
		and slatlng.no = s.no
		and wayno = 0
		and s.people > 0
		and s.type = 'hitchhike'
		and s.status = 'open'
		and carNo != #{userNo}
        order by s.no desc
	</select>
	
	<select id="nearHitchListNoLogin" resultType="hVo">
		select s.no mateNo,
		place eplace1,
		slatlng.lat,
		slatlng.lng,
		s.people people,
		s.point point,
        latlng
		from spotmate s, place p, (select lat,
                                          lng,
                                          s.no no
                                   from spotmate s, place p
                                   where s.no = p.mateNo
                                   and wayno = -1) slatlng
		where p.mateNo = s.no
		and slatlng.no = s.no
		and wayno = 0
		and s.people > 0
		and s.type = 'hitchhike'
		and s.status = 'open'
        order by s.no desc
	</select>
	
<!-- 	예약내역있는지 없는지 확인 -->
	<select id="cancelChk" parameterType="map" resultType="map">
			select r.people,
				driverNo
			from reservation r, spotmate s
			where r.mateNo = s.no 
			and userNo = #{userNo}
			and mateNo = #{mateNo}
			and type = 'hitchhike'
	</select>
<!-- 	예약내역있는지 없는지 확인 -->
	
<!-- 	rideReq를 통해서 탑승예약 -->

	<insert id="updatereservpeople" parameterType="hrVo">
	
		<selectKey keyProperty="canRide" resultType="int" order="BEFORE">
				select people
				from spotmate
				where no = #{mateNo}
		</selectKey>
		
		update spotmate
		<choose>
			<when test="canRide >= people">
				set people = people - #{people}
			</when>
			<otherwise>
				set people = people
			</otherwise>
		</choose>
		
		where no = #{mateNo} 
	
	</insert>
	
	<insert id="makereserv" parameterType="hrVo">
	
		<selectKey keyProperty="driverNo" resultType="int" order="BEFORE">
				select
					driverNo
				from reservation
				where mateNo = #{mateNo}
				group by driverNo
		</selectKey>
			
		insert into reservation 
		values(
			seq_reservation_no.nextval,
			#{mateNo},
			#{userNo},
			#{driverNo},
			sysdate,
			#{point},
			'open',
			#{people},
			#{lat},
			#{lng}
		)
			
	</insert>
	
	<select id="chkResv" parameterType="map" resultType="int">
		select people
		from reservation
		where mateno = #{mateNo}
		and userno = #{userNo}
	</select>
	
	<insert id="usePoint" parameterType="hrVo">
		<selectKey keyProperty="resvNo" resultType="int" order="BEFORE">
				select
					no
				from reservation
				where mateNo = #{mateNo}
				and userNo = #{userNo}
		</selectKey>
		   insert into pointusage 
             values (
             seq_pointusage_no.nextval, 
             #{userNo}, 
             '완료', 
             sysdate, 
             '', 
             -#{point}, 
             #{resvNo})
	</insert>

<!-- 	rideReq를 통해서 탑승 예약 -->

	<select id="chkride" parameterType="int" resultType="int">
		select people
		from spotmate
		where no = #{mateNo}
	</select>

<!-- cancel을 이용해서 탑승 예약 취소 -->
	
	<insert id="cancelResv" parameterType="map">
	
			<selectKey keyProperty="no" resultType="int" order="BEFORE">
				select people
				from reservation
				where mateNo = #{mateNo}
				and userNo = #{userNo}
			</selectKey>
		
		update spotmate
		set
			people = people + #{no}
		where no = #{mateNo}
		
	</insert>
	
	<select id="getResvNo" parameterType="map" resultType="int">
		select no
		from reservation
		where mateNo = #{mateNo}
		and userNo = #{userNo}
	</select>	
	
	
	<delete id="deleteCancelPoint" parameterType="map">
		delete from pointUsage
		where reno = #{resvNo}
		and userNo = #{userNo}
	</delete>
	
	
	<delete id="deleteCancelResv" parameterType="map">
		delete from reservation
		where mateNo = #{mateNo}
		and userNo = #{userNo}
	</delete>

<!-- cancel을 이용해서 탑승 예약 취소 -->

<!-- hitchdriver 현재 위치 보내주는 부분 -->

	<update id="watchpos" parameterType="mVo">
		update place
		set
			latlng = #{lng}||','||#{lat}||','||#{addr}
		where mateNo = #{mateNo}
		and wayno = 0
	</update>

	<select id="selectrideuser" parameterType="int" resultType="hrVo">
		select lat,
			lng,
			userNo
		from reservation
		where mateNo = #{mateNo}
	</select>

<!-- hitchdriver 현재 위치 보내주는 부분 -->	


<!-- hitchwrite 등록하는 부분 -->

	<insert id="hitchinsert" parameterType="dwVo">
		<selectKey keyProperty="no" resultType="int" order="BEFORE">
			select seq_spotmate_no.nextval from dual
		</selectKey>

		insert all
		into spotmate
		values (
		#{no},
		#{carNo},
		to_date(#{sdate1}||' '||#{stime1}, 'yyyy-mm-dd hh24:mi'),
		#{sdate1},
		#{people},
		#{type},
		#{intfare},
		#{dur},
		#{dis},
		#{comments},
		'open'
		)
		into reservation
		values (
		seq_reservation_no.nextval,
		#{no},
		#{userNo},
		#{userNo},
		sysdate,
		#{intfare},
		'open',
		#{people},
		'',
		''
		)
		<if test='nosmoke != null'>
			into spotDetail
			values (
			seq_spotDetail_no.nextval,
			#{no},
			1
			)
		</if>
		<if test='femaledriver != null'>
			into spotDetail
			values (
			seq_spotDetail_no.nextval,
			#{no},
			2
			)
		</if>
		<if test='pet != null'>
			into spotDetail
			values (
			seq_spotDetail_no.nextval,
			#{no},
			3
			)
		</if>
		<if test='phonecharge != null'>
			into spotDetail
			values (
			seq_spotDetail_no.nextval,
			#{no},
			4
			)
		</if>
		<if test='trunk != null'>
			into spotDetail
			values (
			seq_spotDetail_no.nextval,
			#{no},
			5
			)
		</if>
		into place values (
		seq_place_no.nextval,
		#{no},
		'',
		-1,
		'start',
		#{stime1},
		#{splace1},
		#{slat1},
		#{slng1},
		#{latlng1}
		)
		into place
		values (
		seq_place_no.nextval,
		#{no},
		'',
		0,
		'end',
		'',
		#{eplace1},
		#{elat1},
		#{elng1},
		''
		)
		select * from dual
	</insert>
	
<!-- hitchwrite 등록하는 부분 -->

	<insert id="carpoolinsert" parameterType="dwVo">

		<selectKey keyProperty="no" resultType="int" order="BEFORE">
			select seq_spotmate_no.nextval from dual
		</selectKey>

		insert all
		into spotmate
		values (
		#{no},
		#{carNo},
		to_date(#{sdate1}||#{stime1}, 'yyyy-mm-dd hh24:mi'),
		to_date(#{edate1}||#{etime1}, 'yyyy-mm-dd hh24:mi'),
		#{people},
		#{type},
		#{intfare},
		#{dur},
		#{dis},
		#{comments},
		'open'
		)
		<if test='nosmoke != null'>
			into spotDetail
			values (
			seq_spotDetail_no.nextval,
			#{no},
			1
			)
		</if>
		<if test='femaledriver != null'>
			into spotDetail
			values (
			seq_spotDetail_no.nextval,
			#{no},
			2
			)
		</if>
		<if test='pet != null'>
			into spotDetail
			values (
			seq_spotDetail_no.nextval,
			#{no},
			3
			)
		</if>
		<if test='phonecharge != null'>
			into spotDetail
			values (
			seq_spotDetail_no.nextval,
			#{no},
			4
			)
		</if>
		<if test='trunk != null'>
			into spotDetail
			values (
			seq_spotDetail_no.nextval,
			#{no},
			5
			)
		</if>
		into place values (
		seq_place_no.nextval,
		#{no},
		'',
		-1,
		'start',
		#{stime1},
		#{splace1},
		#{slat1},
		#{slng1},
		#{latlng1}
		)
		into place
		values (
		seq_place_no.nextval,
		#{no},
		'',
		0,
		'end',
		'',
		#{eplace1},
		#{elat1},
		#{elng1},
		''
		)
		into reservation
		values (
		seq_reservation_no.nextval,
		#{no},
		#{userNo},
		#{carNo},
		sysdate,
		#{intfare},
		'open',
		#{people},
		'',
		''
		)
		select * from dual
	</insert>


	<insert id="mateinsert" parameterType="mwVo">

		<selectKey keyProperty="no" resultType="int" order="BEFORE">
			select seq_spotmate_no.nextval from dual
		</selectKey>

		insert all

		into spotmate
		values (
		#{no},
		#{carNo},
		to_date(#{sdate1}||#{stime1}, 'yyyy-mm-dd hh24:mi'),
		#{edate1},
		#{people},
		#{type},
		#{intfare},
		'',
		'',
		#{comments},
		'open'
		)
		into reservation
		values (
		seq_reservation_no.nextval,
		#{no},
		#{userNo},
		#{carNo},
		sysdate,
		#{intfare},
		'open',
		#{people},
		'',
		''
		)
		<if test='nosmoke != null'>
			into spotDetail
			values (
			seq_spotDetail_no.nextval,
			#{no},
			1
			)
		</if>
		<if test='femaledriver != null'>
			into spotDetail
			values (
			seq_spotDetail_no.nextval,
			#{no},
			2
			)
		</if>
		<if test='pet != null'>
			into spotDetail
			values (
			seq_spotDetail_no.nextval,
			#{no},
			3
			)
		</if>
		<if test='phonecharge != null'>
			into spotDetail
			values (
			seq_spotDetail_no.nextval,
			#{no},
			4
			)
		</if>
		<if test='trunk != null'>
			into spotDetail
			values (
			seq_spotDetail_no.nextval,
			#{no},
			5
			)
		</if>
		into place values (
		seq_place_no.nextval,
		#{no},
		#{day1},
		-1,
		'start',
		#{stime1},
		#{splace1},
		#{slat1},
		#{slng1},
		#{latlng1}
		)
		<if test='wplace11 != null'>
			into place
			values (
			seq_place_no.nextval,
			#{no},
			#{day1},
			1,
			'waypoint',
			#{wtime11},
			#{wplace11},
			#{wlat11},
			#{wlng11},
			''
			)

		</if>

		<if test='wplace12 != null'>
			into place
			values (
			seq_place_no.nextval,
			#{no},
			#{day1},
			2,
			'waypoint',
			#{wtime12},
			#{wplace12},
			#{wlat12},
			#{wlng12},
			''
			)
		</if>

		<if test='wplace13 != null'>
			into place
			values (
			seq_place_no.nextval,
			#{no},
			#{day1},
			3,
			'waypoint',
			#{wtime13},
			#{wplace13},
			#{wlat13},
			#{wlng13},
			''
			)
		</if>

		<if test='wplace14 != null'>
			into place
			values (
			seq_place_no.nextval,
			#{no},
			#{day1},
			4,
			'waypoint',
			#{wtime14},
			#{wplace14},
			#{wlat14},
			#{wlng14},
			''
			)
		</if>

		<if test='wplace15 != null'>
			into place
			values (
			seq_place_no.nextval,
			#{no},
			#{day1},
			5,
			'waypoint',
			#{wtime15},
			#{wplace15},
			#{wlat15},
			#{wlng15},
			''
			)
		</if>

		into place
		values (
		seq_place_no.nextval,
		#{no},
		#{day1},
		0,
		'end',
		'',
		#{eplace1},
		#{elat1},
		#{elng1},
		''
		)

		<if test='splace2 != null'>
			into place
			values (
			seq_place_no.nextval,
			#{no},
			#{day2},
			-1,
			'start',
			#{stime2},
			#{splace2},
			#{slat2},
			#{slng2},
			#{latlng2}
			)
		</if>

		<if test='wplace21 != null'>
			into place
			values (
			seq_place_no.nextval,
			#{no},
			#{day2},
			1,
			'waypoint',
			#{wtime21},
			#{wplace21},
			#{wlat21},
			#{wlng21},
			''
			)
		</if>

		<if test='wplace22 != null'>
			into place
			values (
			seq_place_no.nextval,
			#{no},
			#{day2},
			2,
			'waypoint',
			#{wtime22},
			#{wplace22},
			#{wlat22},
			#{wlng22},
			''
			)
		</if>

		<if test='wplace23 != null'>
			into place
			values (
			seq_place_no.nextval,
			#{no},
			#{day2},
			3,
			'waypoint',
			#{wtime23},
			#{wplace23},
			#{wlat23},
			#{wlng23},
			''
			)
		</if>

		<if test='wplace24 != null'>
			into place
			values (
			seq_place_no.nextval,
			#{no},
			#{day2},
			4,
			'waypoint',
			#{wtime24},
			#{wplace24},
			#{wlat24},
			#{wlng24},
			''
			)
		</if>


		<if test='wplace25 != null'>
			into place
			values (
			seq_place_no.nextval,
			#{no},
			#{day2},
			5,
			'waypoint',
			#{wtime25},
			#{wplace25},
			#{wlat25},
			#{wlng25},
			''
			)
		</if>

		<if test='eplace2 != null'>
			into place
			values (
			seq_place_no.nextval,
			#{no},
			#{day2},
			0,
			'end',
			'',
			#{eplace2},
			#{elat2},
			#{elng2},
			''
			)
		</if>


		<if test='splace3 != null'>
			into place
			values (
			seq_place_no.nextval,
			#{no},
			#{day3},
			-1,
			'start',
			#{stime3},
			#{splace3},
			#{slat3},
			#{slng3},
			#{latlng3}
			)
		</if>

		<if test='wplace31 != null'>
			into place
			values (
			seq_place_no.nextval,
			#{no},
			#{day3},
			1,
			'waypoint',
			#{wtime31},
			#{wplace31},
			#{wlat31},
			#{wlng31},
			''
			)
		</if>

		<if test='wplace32 != null'>
			into place
			values (
			seq_place_no.nextval,
			#{no},
			#{day3},
			2,
			'waypoint',
			#{wtime32},
			#{wplace32},
			#{wlat32},
			#{wlng32},
			''
			)
		</if>

		<if test='wplace33 != null'>
			into place
			values (
			seq_place_no.nextval,
			#{no},
			#{day3},
			3,
			'waypoint',
			#{wtime33},
			#{wplace33},
			#{wlat33},
			#{wlng33},
			''
			)
		</if>

		<if test='wplace34 != null'>
			into place
			values (
			seq_place_no.nextval,
			#{no},
			#{day3},
			4,
			'waypoint',
			#{wtime34},
			#{wplace34},
			#{wlat34},
			#{wlng34},
			''
			)
		</if>

		<if test='wplace35 != null'>
			into place
			values (
			seq_place_no.nextval,
			#{no},
			#{day3},
			5,
			'waypoint',
			#{wtime35},
			#{wplace35},
			#{wlat35},
			#{wlng35},
			''
			)
		</if>

		<if test='eplace3 != null'>
			into place
			values (
			seq_place_no.nextval,
			#{no},
			#{day3},
			0,
			'end',
			'',
			#{eplace3},
			#{elat3},
			#{elng3},
			''
			)
		</if>

		<if test='splace4 != null'>
			into place
			values (
			seq_place_no.nextval,
			#{no},
			#{day4},
			-1,
			'start',
			#{stime4},
			#{splace4},
			#{slat4},
			#{slng4},
			#{latlng4}
			)
		</if>

		<if test='wplace41 != null'>
			into place
			values (
			seq_place_no.nextval,
			#{no},
			#{day4},
			1,
			'waypoint',
			#{wtime41},
			#{wplace41},
			#{wlat41},
			#{wlng41},
			''
			)
		</if>

		<if test='wplace42 != null'>
			into place
			values (
			seq_place_no.nextval,
			#{no},
			#{day4},
			2,
			'waypoint',
			#{wtime42},
			#{wplace42},
			#{wlat42},
			#{wlng42},
			''
			)
		</if>

		<if test='wplace43 != null'>
			into place
			values (
			seq_place_no.nextval,
			#{no},
			#{day4},
			3,
			'waypoint',
			#{wtime43},
			#{wplace43},
			#{wlat43},
			#{wlng43},
			''
			)
		</if>


		<if test='wplace44 != null'>
			into place
			values (
			seq_place_no.nextval,
			#{no},
			#{day4},
			4,
			'waypoint',
			#{wtime44},
			#{wplace44},
			#{wlat44},
			#{wlng44},
			''
			)
		</if>

		<if test='wplace45 != null'>
			into place
			values (
			seq_place_no.nextval,
			#{no},
			#{day4},
			5,
			'waypoint',
			#{wtime45},
			#{wplace45},
			#{wlat45},
			#{wlng45},
			''
			)
		</if>

		<if test='eplace4 != null'>
			into place
			values (
			seq_place_no.nextval,
			#{no},
			#{day4},
			0,
			'end',
			'',
			#{eplace4},
			#{elat4},
			#{elng4},
			''
			)
		</if>


		<if test='splace5 != null'>
			into place
			values (
			seq_place_no.nextval,
			#{no},
			#{day5},
			-1,
			'start',
			#{stime5},
			#{splace5},
			#{slat5},
			#{slng5},
			#{latlng5}
			)
		</if>

		<if test='wplace51 != null'>
			into place
			values (
			seq_place_no.nextval,
			#{no},
			#{day5},
			1,
			'waypoint',
			#{wtime51},
			#{wplace51},
			#{wlat51},
			#{wlng51},
			''
			)
		</if>


		<if test='wplace52 != null'>
			into place
			values (
			seq_place_no.nextval,
			#{no},
			#{day5},
			2,
			'waypoint',
			#{wtime52},
			#{wplace52},
			#{wlat52},
			#{wlng52},
			''
			)
		</if>

		<if test='wplace53 != null'>
			into place
			values (
			seq_place_no.nextval,
			#{no},
			#{day5},
			3,
			'waypoint',
			#{wtime53},
			#{wplace53},
			#{wlat53},
			#{wlng53},
			''
			)
		</if>

		<if test='wplace54 != null'>
			into place
			values (
			seq_place_no.nextval,
			#{no},
			#{day5},
			4,
			'waypoint',
			#{wtime54},
			#{wplace54},
			#{wlat54},
			#{wlng54},
			''
			)
		</if>

		<if test='wplace55 != null'>
			into place
			values (
			seq_place_no.nextval,
			#{no},
			#{day5},
			5,
			'waypoint',
			#{wtime55},
			#{wplace55},
			#{wlat55},
			#{wlng55},
			''
			)
		</if>

		<if test='eplace5 != null'>
			into place
			values (
			seq_place_no.nextval,
			#{no},
			#{day5},
			0,
			'end',
			'',
			#{eplace5},
			#{elat5},
			#{elng5},
			''
			)
		</if>
		select *
		from dual






	</insert>
	
	
	<insert id="testUser" parameterType="map">
		insert into users
		values(#{userNo},
		#{id},
		#{pw},
		#{name},
		'ssobbs13@naver.com',
		'01064862467',
		'서울시 서초구 방배동',
		#{gender},
		'970107',
		'',
		'',
		''
		)
	</insert>
	<insert id="testCar" parameterType="map">
		insert into car
		values(#{carNo},
		#{userNo},
		#{car},
		#{carNum},
		#{carpic},
		'화이트',
		4,
		#{introduce}
		)
	</insert>
	
	<insert id="testCarDetail" parameterType="map">
		insert into carDetail
		values(#{carDetailNo},
		#{carNo},
		1
		)
	</insert>
	




</mapper>